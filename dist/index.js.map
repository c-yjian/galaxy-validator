{"version":3,"file":"index.js","sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/construct.js","../node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../src/util/object.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../src/util/index.js","../src/class/Rule.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../src/class/GalaxyValidator.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","// 验证规则校验错误时抛出的异常\nclass RuleException extends Error {\n    constructor(message, errorCode, code) {\n        super()\n        this.message = message || 'Error in parameter validation rule'\n        this.errorCode = errorCode || -500\n        this.code = code || 500\n    }\n}\n\n// 不需要将类型转换的，一般给自定义函数验证\nclass RuleResult {\n    constructor(passed, message='error parameter') {\n        this.passed = passed\n        message && (this.message = message)\n    }\n}\n\n// 通过验证之后，将类型转化为适合的类型\nclass RuleResultWithValue extends RuleResult {\n    constructor(passed, message, convertValue) {\n        super(passed, message)\n        this.convertValue = convertValue\n    }\n}\n\nexport { RuleResult, RuleException, RuleResultWithValue }\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","const extractAttributesFromInstance = (instance, options) => {\n    const { specifiedType, prefix, filter } = options\n\n    const _shouldKeep = (value) => {\n        if (filter) {\n            return filter(value)\n        }\n        if (prefix) {\n            return value.startsWith(prefix)\n        }\n        if (specifiedType) {\n            return instance[value] instanceof specifiedType\n        }\n        return false\n    }\n\n    // 遍历该对象上的所有属性过滤符合条件的属性\n    const _recursionInstanceAttr = (instance2) => {\n        // 基线条件（跳出递归）\n        if (instance2.__proto__ === null) return []\n        let keys = Reflect.ownKeys(instance2)\n        keys = keys.filter((key) => _shouldKeep(key))\n        return [...keys, ..._recursionInstanceAttr(instance2.__proto__)]\n    }\n\n    return _recursionInstanceAttr(instance)\n}\n\n// 传入的值是否是'空'\nconst isEmptyVal = (val) => val === null || val === undefined || val === ''\n\n// judge data type\nconst dataType = (data) => {\n    const val = Object.prototype.toString.call(data)\n    switch (val) {\n        case '[object String]':\n            return 'String'\n        case '[object Number]':\n            return 'Number'\n        case '[object Boolean]':\n            return 'Boolean'\n        case '[object Symbol]':\n            return 'Symbol'\n        case '[object Undefined]':\n            return 'Undefined'\n        case '[object Null]':\n            return 'Null'\n        case '[object Function]':\n            return 'Function'\n        case '[object Date]':\n            return 'Date'\n        case '[object Array]':\n            return 'Array'\n        case '[object RegExp]':\n            return 'RegExp'\n        case '[object Error]':\n            return 'Error'\n        case '[object HTMLDocument]':\n            return 'HTMLDocument'\n        case '[object Object]':\n            return 'Object'\n        default:\n            return 'any'\n    }\n}\n\nexport { dataType, isEmptyVal, extractAttributesFromInstance }\n","import { RuleResult, RuleException, RuleResultWithValue } from '../util/object'\n\nimport { dataType, isEmptyVal } from '../util'\n\nconst validator = require('validator')\nconst chalk = require('chalk')\n\nconst { log } = console\nconst validateRuleTxt = `\nEnter array format for validation rules, like:\n    [\n        {required:Boolean, message:'show txt while it failed '},\n        {type:'isInt', message:'show txt while it failed '},\n    ]\n`\nconst patchValiteType = ['isString', 'isObject', 'isArray']\nconst patchValiteTypeMap = {\n    isString: 'String',\n    isObject: 'Object',\n    isArray: 'Array',\n}\n\nexport default class Rule {\n    constructor(ruleList, options) {\n        // 待验证的规则\n        this.ruleList = ruleList || []\n        // 其他的参数配置\n        this.options = options\n        try {\n            this._validateRuleList()\n        } catch (error) {\n            log(\n                chalk.red(\n                    'Validation rule error: ',\n                    chalk.underline.bold(error.message),\n                ),\n            )\n        }\n    }\n\n    // 校验登记的规则有无错误\n    _validateRuleList() {\n        const { ruleList } = this\n\n        if (Array.isArray(ruleList)) {\n            const ruleWithRequired = ruleList.filter((rule) =>\n                Reflect.has(rule, 'required'),\n            )\n            if (ruleWithRequired.length > 1) {\n                throw new RuleException(\n                    'The required attribute rule is set multiple times',\n                )\n            }\n            ruleList.forEach((rule) => {\n                const { required } = rule\n                if (\n                    !Reflect.has(rule, 'required') &&\n                    !Reflect.has(rule, 'type')\n                ) {\n                    throw new RuleException(\n                        'Set the required attribute value or the type attribute value',\n                    )\n                }\n                if (\n                    Reflect.has(rule, 'required') &&\n                    Reflect.has(rule, 'type')\n                ) {\n                    throw new RuleException(\n                        'Write the Required field and the Type field separately',\n                    )\n                }\n                if (\n                    Reflect.has(rule, 'required') &&\n                    !validator.isBoolean(`${required}`)\n                ) {\n                    throw new RuleException(\n                        'The Required field should be a Boolean',\n                    )\n                }\n            })\n        } else {\n            throw new RuleException(validateRuleTxt)\n        }\n    }\n\n    // js语言中将传递过来的int转为了数字字符串\n    // 通过验证之后再转回去，比如传入的id是int，通过验证之后\n    // 将 '2'转为2存储在this.parsedData中\n    _convertValue() {\n        const { value } = this\n        const ruleWithTypeList = this.ruleList.filter((rule) => rule.type)\n        for (const rule of ruleWithTypeList) {\n            const { type } = rule\n            if (type === 'isInt') {\n                return parseInt(value, 10)\n            }\n            if (type === 'isFloat') {\n                return parseFloat(value, 10)\n            }\n            if (type === 'isBoolean') {\n                return !!value\n            }\n        }\n        return value\n    }\n\n    // 验证单个的规则\n    _validateRuleItem(rule) {\n        const { type, message, options } = rule\n        let validateRes = false\n        if (patchValiteType.includes(type)) {\n            // 登记的类型和传入的类型一致，则通过验证\n            if (dataType(this.value) === patchValiteTypeMap[type]) {\n                validateRes = true\n            }\n        } else {\n            // validator 去验证\n            validateRes = validator[type](this.value, options)\n        }\n        return validateRes\n            ? new RuleResult(true, '')\n            : new RuleResult(false, message || 'parameter error')\n    }\n\n    validate(value) {\n        // 规则配置中包含required的\n        const ruleWithRequired =\n            this.ruleList.find((rule) => Reflect.has(rule, 'required')) || {}\n        // 规则配置中包含type的\n        const ruleWithTypeList = this.ruleList.filter((rule) =>\n            Reflect.has(rule, 'type'),\n        )\n        this.value = value\n        // 空值拦截判断\n        if (isEmptyVal(value)) {\n            if (ruleWithRequired.required) {\n                // 验证某一个字段不符合某一个规则就直接返回不再接着验证下面的规则\n                return new RuleResultWithValue(\n                    false,\n                    ruleWithRequired.message || 'Fields are required parameters',\n                )\n            }\n            // 空值非必需，就直接通过判断，如果有值则要满足其他条件\n            return new RuleResultWithValue(true, '', null)\n        }\n\n        for (const rule of ruleWithTypeList) {\n            const validateRes = this._validateRuleItem(rule)\n            // 验证挂了， 验证某一个字段不符合某一个规则就直接返回不再接着验证下面的规则\n            if (!validateRes.passed) {\n                return new RuleResultWithValue(false, validateRes.message)\n            }\n        }\n        // all passed\n        const convertVal = this._convertValue();\n        return new RuleResultWithValue(true, '', convertVal);\n    }\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","import Rule from './Rule'\n\nimport { RuleResult } from '../util/object'\n\nimport { extractAttributesFromInstance } from '../util'\n\nconst _ = require('lodash')\nconst chalk = require('chalk')\n\nconst { log } = console\n\nexport default class GalaxyValidator {\n    constructor() {\n        // 存储原始数据\n        this.rawData = {}\n        // 存储通过验证，解析之后的数据\n        this.parsedData = {}\n        // 存储别名登记\n        this.alias = {}\n    }\n\n    // 聚合请求参数\n    _assembleAllParams(ctx) {\n        return {\n            body: ctx.request.body || {},\n            query: ctx.request.query,\n            path: ctx.params,\n            header: ctx.request.header,\n            pool: {}, // 用于存储用户自定义验证函数的返回值，一般多用于存储查询数据库的记录，避免再次查询\n        }\n    }\n\n    _filterParams2Validate(key) {\n        // 验证validate+大写字母的方法名\n        if (/^validate([A-Z])\\w+/g.test(key)) {\n            return true\n        }\n        // 提取需要验证的字段\n        if (this[key] instanceof Rule) {\n            return true\n        }\n        return false\n    }\n\n    _mountHook(ctx, hook = 'galaxy') {\n        if (!ctx[hook]) {\n            ctx[hook] = this\n        } else {\n            log(\n                chalk.red(\n                    chalk.underline.bold(`ctx.${hook}is nearly occupied, please change a variable`),\n                ),\n            )\n        }\n    }\n\n    async _validateRuleByKey(key, isValidateCustomFunc) {\n        let validateResult\n        if (isValidateCustomFunc) {\n            // 自定义函数验证\n            validateResult = await this._validateCustomFun(key)\n        } else {\n            // 属性验证, 数组，内有一组Rule\n            const ruleInstance2Validate = this[key]\n            // 别名替换取值\n            const useKey = this.alias[key] || key\n            const val2ValidateInfo = this.getValueInfo(useKey)\n            validateResult = ruleInstance2Validate.validate(\n                val2ValidateInfo.value,\n            )\n        }\n        return validateResult\n    }\n\n    // 验证自定义函数\n    async _validateCustomFun(key) {\n        let result\n        const customFun = this[key]\n        try {\n            const customFunReturn = await customFun(this.parsedData)\n            // 如果自定义函数有返回值，并且有对应的name和val的属性，将其挂载在this.parsed上\n            // 后续用户可以通过 ctx.galaxy.get('pool.name')的方式获取\n            if (customFunReturn && customFunReturn.key && customFunReturn.val) {\n                _.set(\n                    this.parsedData,\n                    ['pool', customFunReturn.key],\n                    customFunReturn.val,\n                )\n            }\n            result = new RuleResult(true)\n        } catch (error) {\n            result = new RuleResult(\n                false,\n                error.message || `Custom ${customFun.name} method validation failed`,\n            )\n        }\n        return result\n    }\n\n    // 验证\n    async validate(ctx, alias = {}, hook) {\n        const errorList = []\n        const params = this._assembleAllParams(ctx)\n        this.alias = alias\n        this.rawData = _.cloneDeep(params)\n        this.parsedData = _.cloneDeep(params)\n        const member2ValidateKeyList = extractAttributesFromInstance(this, {\n            filter: this._filterParams2Validate.bind(this),\n        })\n        for (const key of member2ValidateKeyList) {\n            const isValidateCustomFunc = typeof this[key] === 'function'\n            const result = await this._validateRuleByKey(\n                key,\n                isValidateCustomFunc,\n            )\n            const valInfo = this.getValueInfo(key);\n            if (result.passed) {\n                _.set(\n                    this.parsedData,\n                    valInfo.path,\n                    result.convertValue\n                );\n            }else{\n                errorList.push({\n                    type: isValidateCustomFunc ? 'function' : 'value',\n                    filed: key,\n                    message: result.message,\n                    path: isValidateCustomFunc ? null : valInfo.path.join('.')\n                })\n            }\n        }\n        if (errorList.length) {\n            return Promise.reject(errorList)\n        }\n        this._mountHook(ctx, hook)\n        return Promise.resolve(this)\n    }\n\n    // 用户知道变量路径来从 parsed 中获取对应的值\n    get(path, parsed = true) {\n        if (parsed) {\n            return _.get(this.parsedData, path, null)\n        }\n        return _.get(this.rawData, path, null)\n    }\n\n    /**\n     * 用户不知道路径，只知道Key就可以根据key获取对应值的信息\n     * 需要确保在请求体中的参数名唯一，否则只会返回第一个\n    */\n    getValueInfo(key) {\n        let value = null\n        let path = []\n        const valueLocation = ['query', 'body', 'path', 'header']\n        valueLocation.find((location) => {\n            const _path = [location, key]\n            const _val = _.get(this.rawData, _path)\n            if (_val) {\n                path = _path\n                value = _val\n                return true\n            }\n        })\n        return {\n            value,\n            path,\n        }\n    }\n\n    // 获取聚合之后的值，\n    getAssembleParams(parsed=true){\n        return parsed ? this.parsedData : this.rawData\n    }\n\n}\n"],"names":["_classCallCheck","instance","Constructor","TypeError","module","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","constructor","value","_typeof","obj","Symbol","iterator","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","call","assertThisInitialized","_getPrototypeOf","getPrototypeOf","_isNativeFunction","fn","Function","toString","indexOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","_construct","Parent","args","Class","isNativeReflectConstruct","a","push","apply","bind","arguments","_wrapNativeSuper","_cache","Map","undefined","isNativeFunction","has","get","set","Wrapper","this","RuleException","message","errorCode","code","Error","RuleResult","passed","RuleResultWithValue","convertValue","_arrayLikeToArray","arr","len","arr2","Array","_arrayWithoutHoles","isArray","arrayLikeToArray","_iterableToArray","iter","from","_unsupportedIterableToArray","minLen","n","slice","name","test","_nonIterableSpread","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","extractAttributesFromInstance","options","specifiedType","prefix","filter","_recursionInstanceAttr","instance2","keys","ownKeys","startsWith","isEmptyVal","val","dataType","data","validator","require","chalk","console","log","validateRuleTxt","patchValiteType","patchValiteTypeMap","isString","isObject","Rule","ruleList","_validateRuleList","error","red","underline","bold","rule","forEach","required","isBoolean","type","parseInt","parseFloat","validateRes","includes","ruleWithRequired","find","ruleWithTypeList","_validateRuleItem","convertVal","_convertValue","runtime","exports","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","err","wrap","innerFn","outerFn","tryLocsList","context","state","protoGenerator","Generator","generator","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","record","tryCatch","info","done","resultName","next","nextLoc","sent","_sent","dispatchException","abrupt","GenStateSuspendedYield","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","Promise","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_","GalaxyValidator","rawData","parsedData","alias","ctx","body","request","query","path","params","header","pool","hook","isValidateCustomFunc","_validateCustomFun","validateResult","ruleInstance2Validate","useKey","val2ValidateInfo","getValueInfo","validate","customFun","customFunReturn","_context2","errorList","_assembleAllParams","cloneDeep","member2ValidateKeyList","_filterParams2Validate","_validateRuleByKey","valInfo","filed","join","_mountHook","location","_path","_val","_this"],"mappings":"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"}